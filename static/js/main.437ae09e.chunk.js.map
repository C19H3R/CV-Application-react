{"version":3,"sources":["components/EditPage.js","components/Header.js","components/PreviewPage.js","App.js","index.js"],"names":["EditPage","setData","data","console","log","firstName","lastName","title","address","phoneNumber","Email","Description","Experience","Education","id","className","onClick","photo","position","company","city","from","to","school","level","Core","style","background","border","placeholder","value","onChange","e","target","type","accept","marginLeft","reader","FileReader","onload","evnt","result","readAsDataURL","files","resize","map","itm","idx","Fragment","tmpExp","filter","val","i","edu","tmpEdu","Header","PreviewPage","window","print","exp","Date","getFullYear","obj","src","alt","App","useState","cvData","setCvData","display","gridTemplateColumns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.437ae09e.chunk.js","sourcesContent":["import React from \"react\";\nimport CachedIcon from \"@mui/icons-material/Cached\";\nconst EditPage = ({ setData, data }) => {\n   const resetData = () => {\n      setData({\n         firstName: \"\",\n         lastName: \"\",\n         title: \"\",\n         photo: \"ASDF\",\n         address: \"\",\n         phoneNumber: \"\",\n         Email: \"\",\n         Description: \"\",\n         Experience: [\n            {\n               position: \"\",\n               company: \"\",\n               city: \"\",\n               from: \"\",\n               to: \"\",\n            },\n         ],\n         Education: [\n            {\n               school: \"\",\n               city: \"\",\n               level: \"\",\n               Core: \"\",\n               from: \"\",\n               to: \"\",\n            },\n         ],\n      });\n   };\n\n   console.log(data);\n   const {\n      firstName,\n      lastName,\n      title,\n      address,\n      phoneNumber,\n      Email,\n      Description,\n      Experience,\n      Education,\n   } = data;\n   console.log(Experience);\n   return (\n      <div id=\"edit-page\">\n         <div className=\"page-header\">\n            <span>Title</span>\n            <button\n               onClick={resetData}\n               style={{ background: \"none\", border: \"0px\" }}\n            >\n               <CachedIcon />\n            </button>\n         </div>\n         <div id=\"inputs-container\">\n            <div className=\"edit-info-container\">\n               <span>Personal Info</span>\n               <input\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChange={(e) => {\n                     setData({ ...data, firstName: e.target.value });\n                  }}\n               />\n               <input\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChange={(e) => {\n                     setData({ ...data, lastName: e.target.value });\n                  }}\n               />\n               <input\n                  placeholder=\"Title\"\n                  value={title}\n                  onChange={(e) => {\n                     setData({ ...data, title: e.target.value });\n                  }}\n               />\n               <label>\n                  Photo\n                  <input\n                     type=\"file\"\n                     accept=\"image/*,.pdf\"\n                     style={{ marginLeft: \"20px\" }}\n                     onChange={(e) => {\n                        const reader = new FileReader();\n                        reader.onload = (evnt) => {\n                           setData({ ...data, photo: evnt.target.result });\n                        };\n                        reader.readAsDataURL(e.target.files[0]);\n                     }}\n                  />\n               </label>\n               <input\n                  placeholder=\"Address\"\n                  value={address}\n                  onChange={(e) => {\n                     setData({ ...data, address: e.target.value });\n                  }}\n               />\n               <input\n                  placeholder=\"Phone Number\"\n                  value={phoneNumber}\n                  onChange={(e) => {\n                     setData({ ...data, phoneNumber: e.target.value });\n                  }}\n               />\n               <input\n                  placeholder=\"Email\"\n                  value={Email}\n                  onChange={(e) => {\n                     setData({ ...data, Email: e.target.value });\n                  }}\n               />\n               <textarea\n                  style={{ resize: \"none\" }}\n                  placeholder=\"Description\"\n                  value={Description}\n                  onChange={(e) => {\n                     setData({ ...data, Description: e.target.value });\n                  }}\n               />\n            </div>\n            <div className=\"edit-info-container\">\n               <span>Experience</span>\n               {Experience.map((itm, idx) => (\n                  <React.Fragment key={idx}>\n                     <input\n                        placeholder=\"Position\"\n                        value={itm.position}\n                        onChange={(e) => {\n                           Experience[idx] = {\n                              ...Experience[idx],\n                              position: e.target.value,\n                           };\n                           setData({ ...data, Experience });\n                        }}\n                     />\n                     <input\n                        placeholder=\"Company\"\n                        value={itm.company}\n                        onChange={(e) => {\n                           Experience[idx] = {\n                              ...Experience[idx],\n                              company: e.target.value,\n                           };\n                           setData({ ...data, Experience });\n                        }}\n                     />\n                     <input\n                        placeholder=\"City\"\n                        value={itm.city}\n                        onChange={(e) => {\n                           Experience[idx] = {\n                              ...Experience[idx],\n                              city: e.target.value,\n                           };\n                           setData({ ...data, Experience });\n                        }}\n                     />\n                     <input\n                        placeholder=\"From\"\n                        type=\"date\"\n                        value={itm.from}\n                        onChange={(e) => {\n                           Experience[idx] = {\n                              ...Experience[idx],\n                              from: e.target.value,\n                           };\n                           setData({ ...data, Experience });\n                        }}\n                     />\n                     <input\n                        placeholder=\"To\"\n                        type=\"date\"\n                        value={itm.to}\n                        onChange={(e) => {\n                           Experience[idx] = {\n                              ...Experience[idx],\n                              to: e.target.value,\n                           };\n                           console.log(Experience[idx]);\n                           setData({ ...data, Experience });\n                        }}\n                     />\n                     <button\n                        className=\"delete-btn\"\n                        onClick={() => {\n                           const tmpExp = Experience.filter((val, i) => {\n                              console.log(i !== idx);\n                              return i !== idx;\n                           });\n                           console.log(\"AFTER FILER \", tmpExp);\n                           setData({ ...data, Experience: tmpExp });\n                        }}\n                     >\n                        Delete\n                     </button>\n                  </React.Fragment>\n               ))}\n               <button\n                  className=\"add-btn\"\n                  onClick={() => {\n                     setData({\n                        ...data,\n                        Experience: [\n                           ...Experience,\n                           {\n                              position: \"asdf\",\n                              company: \"asdf\",\n                              city: \"asdf\",\n                              from: \"asdf\",\n                              to: \"asdf\",\n                           },\n                        ],\n                     });\n                  }}\n               >\n                  Add\n               </button>\n            </div>\n            <div className=\"edit-info-container\">\n               <span>Education</span>\n               {Education.map((edu, idx) => (\n                  <React.Fragment>\n                     <input\n                        placeholder=\"University/School Name\"\n                        value={edu.school}\n                        onChange={(e) => {\n                           Education[idx] = {\n                              ...Education[idx],\n                              school: e.target.value,\n                           };\n                           setData({ ...data, Education });\n                        }}\n                     />\n                     <input\n                        placeholder=\"City\"\n                        value={edu.city}\n                        onChange={(e) => {\n                           Education[idx] = {\n                              ...Education[idx],\n                              city: e.target.value,\n                           };\n                           setData({ ...data, Education });\n                        }}\n                     />\n                     <input\n                        placeholder=\"Education level\"\n                        value={edu.level}\n                        onChange={(e) => {\n                           Education[idx] = {\n                              ...Education[idx],\n                              level: e.target.value,\n                           };\n                           setData({ ...data, Education });\n                        }}\n                     />\n                     <input\n                        placeholder=\"Core\"\n                        value={edu.Core}\n                        onChange={(e) => {\n                           Education[idx] = {\n                              ...Education[idx],\n                              Core: e.target.value,\n                           };\n                           setData({ ...data, Education });\n                        }}\n                     />\n                     <input\n                        placeholder=\"From\"\n                        type=\"date\"\n                        value={edu.from}\n                        onChange={(e) => {\n                           Education[idx] = {\n                              ...Education[idx],\n                              from: e.target.value,\n                           };\n                           setData({ ...data, Education });\n                        }}\n                     />\n                     <input\n                        placeholder=\"To\"\n                        type=\"date\"\n                        value={edu.to}\n                        onChange={(e) => {\n                           Education[idx] = {\n                              ...Education[idx],\n                              to: e.target.value,\n                           };\n                           setData({ ...data, Education });\n                        }}\n                     />\n                     <button\n                        className=\"delete-btn\"\n                        onClick={() => {\n                           const tmpEdu = Education.filter(\n                              (val, i) => i !== idx\n                           );\n                           setData({ ...data, Education: tmpEdu });\n                        }}\n                     >\n                        Delete\n                     </button>\n                  </React.Fragment>\n               ))}\n               <button\n                  className=\"add-btn\"\n                  onClick={() => {\n                     setData({\n                        ...data,\n                        Education: [\n                           ...Education,\n                           {\n                              school: \"\",\n                              city: \"\",\n                              level: \"\",\n                              Core: \"\",\n                              from: \"\",\n                              to: \"\",\n                           },\n                        ],\n                     });\n                  }}\n               >\n                  Add\n               </button>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default EditPage;\n","import React from \"react\";\n\nconst Header = () => {\n   return (\n      <div className=\"header-div\">\n         <h1>CV-Generator</h1>\n      </div>\n   );\n};\nexport default Header;\n","import React from \"react\";\nimport PrintIcon from \"@mui/icons-material/Print\";\n\nconst PreviewPage = ({ data }) => {\n   const {\n      firstName,\n      lastName,\n      title,\n      photo,\n      address,\n      phoneNumber,\n      Email,\n      Description,\n      Experience,\n      Education,\n   } = data;\n\n   return (\n      <div id=\"preview-page\">\n         <div className=\"page-header\">\n            <span>Preview Page</span>\n            <button\n               style={{ background: \"none\", border: \"0px\" }}\n               onClick={() => window.print()}\n            >\n               <PrintIcon />\n            </button>\n         </div>\n         <div id=\"main-cv\">\n            <div id=\"cv-header\">\n               <span>{firstName + \" \" + lastName}</span>\n               <span>{title}</span>\n            </div>\n            <div id=\"cv-info\">\n               <div id=\"cv-info-left\">\n                  <div>\n                     <span>Description</span>\n                     <p>{Description}</p>\n                  </div>\n                  <div>\n                     <span>Experience</span>\n                     {Experience.map((exp, idx) => (\n                        <React.Fragment key={idx}>\n                           <div className=\"exp-div\">\n                              <span>\n                                 {new Date(exp.from).getFullYear() +\n                                    \" - \" +\n                                    new Date(exp.to).getFullYear()}\n                              </span>\n                              <div>\n                                 <span>{exp.company}</span>\n                                 <span>{exp.position}</span>\n                                 <span>{exp.city}</span>\n                              </div>\n                           </div>\n                        </React.Fragment>\n                     ))}\n                  </div>\n                  <div>\n                     <span>Education</span>\n                     {Education.map((obj, idx) => (\n                        <React.Fragment key={idx}>\n                           <div className=\"edu-div\">\n                              <span>\n                                 {new Date(obj.from).getFullYear() +\n                                    \" - \" +\n                                    new Date(obj.to).getFullYear()}\n                              </span>\n                              <div>\n                                 <span>{obj.school}</span>\n                                 <span>{obj.city}</span>\n                                 <span>Subject: {obj.Core}</span>\n                              </div>\n                           </div>\n                        </React.Fragment>\n                     ))}\n                  </div>\n               </div>\n               <div id=\"cv-info-right\">\n                  <div id=\"profile-pic-div\">\n                     <img src={photo} alt=\"Profile Pic\" />\n                  </div>\n                  <div id=\"personal-info\">\n                     <span>Personal Details</span>\n                     <span>Address</span>\n                     <p>{address}</p>\n                     <span>Phone Number</span>\n                     <p>{phoneNumber}</p>\n                     <span>Email</span>\n                     <p>{Email}</p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default PreviewPage;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport EditPage from \"./components/EditPage\";\nimport Header from \"./components/Header\";\nimport PreviewPage from \"./components/PreviewPage\";\n\nfunction App() {\n   const [cvData, setCvData] = useState({\n      firstName: \"\",\n      lastName: \"\",\n      title: \"\",\n      photo: \"ASDF\",\n      address: \"\",\n      phoneNumber: \"\",\n      Email: \"\",\n      Description: \"\",\n      Experience: [\n         {\n            position: \"\",\n            company: \"\",\n            city: \"\",\n            from: \"\",\n            to: \"\",\n         },\n      ],\n      Education: [\n         {\n            school: \"\",\n            city: \"\",\n            level: \"\",\n            Core: \"\",\n            from: \"\",\n            to: \"\",\n         },\n      ],\n   });\n\n   return (\n      <div>\n         <Header />\n         <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2,1fr)\" }}>\n            <EditPage setData={setCvData} data={cvData} />\n            <PreviewPage data={cvData} />\n         </div>\n         {/* <div>\n            <PreviewPage />\n         </div> */}\n         {/* FOOTER */}\n      </div>\n   );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}